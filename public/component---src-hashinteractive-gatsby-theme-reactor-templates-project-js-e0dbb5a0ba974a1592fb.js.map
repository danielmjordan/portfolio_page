{"version":3,"sources":["webpack:///./src/@hashinteractive/gatsby-theme-reactor/templates/project.js"],"names":["query","data","project","name","description","technologies","image","url","p","sx","width","py","flexDirection","flexWrap","mb","position","boxShadow","top","left","borderRadius","bg","theme","colors","gray","height","zIndex","display","h1","color","my","map","tech","i","key","fontSize","border","marginBottom","borderLeft","borderStyle","borderColor","px","mr","mt","href","target","rel","variant","textDecoration","verticalAlign","ml","fill","preserveAspectRatio","viewBox","d","fluid","childImageSharp","alt"],"mappings":"2NAMaA,EAAK,aAwBH,sBAAiC,IAAD,IAA7BC,KAAQC,eAAqB,MAAX,GAAW,EACrCC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaC,EAA6BH,EAA7BG,aAAcC,EAAeJ,EAAfI,MAAOC,EAAQL,EAARK,IAChD,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAWC,EAAG,GACZ,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,GAAI,CACFC,MAAO,OACPC,GAAI,IAGN,YAAC,IAAD,CACEF,GAAI,CACFG,cAAe,WAGjB,YAAC,IAAD,KACE,YAAC,IAAD,CACEH,GAAI,CACFI,SAAU,SAGZ,YAAC,IAAD,CACEJ,GAAI,CACFC,MAAO,CAAC,OAAQ,OAChBI,GAAI,CAAC,EAAG,KAGV,YAAC,IAAD,CACEL,GAAI,CACFM,SAAU,aAGZ,mBACEN,GAAI,CACFM,SAAU,WACVC,UAAW,KACXC,KAAM,GACNC,KAAM,EAAE,IAAK,IACbC,aAAc,OACdC,GAAI,SAACC,GAAD,OAAWA,EAAMC,OAAOC,KAAK,IACjCb,MAAO,IACPc,OAAQ,OAGZ,mBACEf,GAAI,CACFM,SAAU,WACVU,OAAQ,GACRC,QAAS,iBAGX,YAAC,IAAOC,GAAR,CACElB,GAAI,CACFM,SAAU,WACVD,GAAI,EACJc,MAAO,UACPH,OAAQ,KAGTtB,KAIP,YAAC,IAAD,CACEM,GAAI,CACFoB,GAAI,IAGN,qBAAIzB,IAEN,YAAC,IAAD,CACEK,GAAI,CACFI,SAAU,SAGXR,EAAayB,KAAI,SAACC,EAAMC,GAAP,OAChB,mBACEC,IAAKD,EACLvB,GAAI,CACFyB,SAAU,UACVC,OAAQ,EACRC,aAAc,EACdC,WAAY,EACZC,YAAa,QACbC,YAAa,SAAClB,GAAD,OAAWA,EAAMC,OAAOC,KAAK,IAC1CiB,GAAI,EACJ7B,GAAI,EACJ8B,GAAI,EACJrB,GAAI,SAACC,GAAD,OAAWA,EAAMC,OAAOC,KAAK,MAGlCQ,OAIP,YAAC,IAAD,CACEtB,GAAI,CACFiC,GAAI,CAAC,EAAG,KAGV,iBACEC,KAAMpC,EACNqC,OAAO,SACPC,IAAI,sBACJpC,GAAI,CACFqC,QAAS,iBACTpB,QAAS,eACTqB,eAAgB,OAChBb,SAAU,EACVvB,GAAI,EACJK,UAAW,KACXI,GAAI,SAACC,GAAD,OAAWA,EAAMC,OAAOC,KAAK,IACjC,UAAW,CACTH,GAAI,SAACC,GAAD,OAAWA,EAAMC,OAAOC,KAAK,OAIrC,wBAAOpB,GACP,mBACEM,GAAI,CACFuC,cAAe,SACfC,GAAI,EACJlC,SAAU,WACVE,IAAK,QAEPiC,KAAK,eACLC,oBAAoB,gBACpB3B,OAAO,MACPd,MAAM,MACN0C,QAAQ,aAER,qBACE,oBAAMC,EAAE,qRAMlB,YAAC,IAAD,CACE5C,GAAI,CACFwC,GAAI,CAAC,EAAG,YACRvC,MAAO,CAAC,OAAQ,SAGjBJ,GACC,YAAC,IAAD,CACEG,GAAI,CACFU,aAAc,EACdH,UAAW,MACXN,MAAO,CAAC,SAEV4C,MAAOhD,EAAMiD,gBAAgBD,MAC7BE,IAAKrD","file":"component---src-hashinteractive-gatsby-theme-reactor-templates-project-js-e0dbb5a0ba974a1592fb.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Container, Flex, Box, Styled } from 'theme-ui';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\n\nexport const query = graphql`\n  query($projectID: String!) {\n    project(id: { eq: $projectID }) {\n      name\n      description\n      technologies\n      url\n      id\n      image {\n        publicURL\n        childImageSharp {\n          fluid(quality: 50) {\n            aspectRatio\n            base64\n            sizes\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ data: { project = {} } }) => {\n  const { name, description, technologies, image, url } = project;\n  return (\n    <Layout>\n      <Container p={3}>\n        <Flex>\n          <Box\n            sx={{\n              width: 'full',\n              py: 5,\n            }}\n          >\n            <Flex\n              sx={{\n                flexDirection: 'column',\n              }}\n            >\n              <Box>\n                <Flex\n                  sx={{\n                    flexWrap: 'wrap',\n                  }}\n                >\n                  <Box\n                    sx={{\n                      width: ['full', '1/2'],\n                      mb: [5, 0],\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        position: 'relative',\n                      }}\n                    >\n                      <div\n                        sx={{\n                          position: 'absolute',\n                          boxShadow: 'xl',\n                          top: -15,\n                          left: [-15, -40],\n                          borderRadius: 'full',\n                          bg: (theme) => theme.colors.gray[4],\n                          width: 100,\n                          height: 100,\n                        }}\n                      />\n                      <div\n                        sx={{\n                          position: 'relative',\n                          zIndex: 99,\n                          display: 'inline-block',\n                        }}\n                      >\n                        <Styled.h1\n                          sx={{\n                            position: 'relative',\n                            mb: 0,\n                            color: 'primary',\n                            zIndex: 99,\n                          }}\n                        >\n                          {name}\n                        </Styled.h1>\n                      </div>\n                    </Box>\n                    <Box\n                      sx={{\n                        my: 4,\n                      }}\n                    >\n                      <p>{description}</p>\n                    </Box>\n                    <Flex\n                      sx={{\n                        flexWrap: 'wrap',\n                      }}\n                    >\n                      {technologies.map((tech, i) => (\n                        <div\n                          key={i}\n                          sx={{\n                            fontSize: '0.75rem',\n                            border: 0,\n                            marginBottom: 2,\n                            borderLeft: 3,\n                            borderStyle: 'solid',\n                            borderColor: (theme) => theme.colors.gray[4],\n                            px: 3,\n                            py: 1,\n                            mr: 3,\n                            bg: (theme) => theme.colors.gray[2],\n                          }}\n                        >\n                          {tech}\n                        </div>\n                      ))}\n                    </Flex>\n                    <Box\n                      sx={{\n                        mt: [3, 4],\n                      }}\n                    >\n                      <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        sx={{\n                          variant: 'buttons.simple',\n                          display: 'inline-block',\n                          textDecoration: 'none',\n                          fontSize: 2,\n                          py: 3,\n                          boxShadow: 'lg',\n                          bg: (theme) => theme.colors.gray[5],\n                          '&:hover': {\n                            bg: (theme) => theme.colors.gray[6],\n                          },\n                        }}\n                      >\n                        <span>{name}</span>\n                        <svg\n                          sx={{\n                            verticalAlign: 'middle',\n                            ml: 2,\n                            position: 'relative',\n                            top: '-1px',\n                          }}\n                          fill=\"currentColor\"\n                          preserveAspectRatio=\"xMidYMid meet\"\n                          height=\"1em\"\n                          width=\"1em\"\n                          viewBox=\"0 0 40 40\"\n                        >\n                          <g>\n                            <path d=\"m28.4 11.6c4.6 0 8.2 3.8 8.2 8.4s-3.6 8.4-8.2 8.4h-6.8v-3.2h6.8c2.8 0 5.1-2.4 5.1-5.2s-2.3-5.2-5.1-5.2h-6.8v-3.2h6.8z m-15 10v-3.2h13.2v3.2h-13.2z m-6.9-1.6c0 2.8 2.3 5.2 5.1 5.2h6.8v3.2h-6.8c-4.6 0-8.2-3.8-8.2-8.4s3.6-8.4 8.2-8.4h6.8v3.2h-6.8c-2.8 0-5.1 2.4-5.1 5.2z\"></path>\n                          </g>\n                        </svg>\n                      </a>\n                    </Box>\n                  </Box>\n                  <Box\n                    sx={{\n                      ml: [0, '16.6666%'],\n                      width: ['full', '1/3'],\n                    }}\n                  >\n                    {image && (\n                      <Img\n                        sx={{\n                          borderRadius: 5,\n                          boxShadow: '2xl',\n                          width: ['full'],\n                        }}\n                        fluid={image.childImageSharp.fluid}\n                        alt={name}\n                      />\n                    )}\n                  </Box>\n                </Flex>\n              </Box>\n            </Flex>\n          </Box>\n        </Flex>\n      </Container>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}