{"version":3,"sources":["webpack:///./src/@hashinteractive/gatsby-theme-reactor/templates/project.js"],"names":["data","project","name","start","end","description","technologies","image","url","p","sx","width","py","flexDirection","flexWrap","mb","position","boxShadow","top","left","borderRadius","bg","theme","colors","gray","height","zIndex","display","h1","textShadow","color","h6","pl","fontWeight","my","map","tech","i","key","fontSize","border","borderLeft","borderStyle","borderColor","px","mr","mt","href","target","rel","variant","textDecoration","verticalAlign","ml","fill","preserveAspectRatio","viewBox","d","src","publicURL","alt","query"],"mappings":"sMAKe,sBAAiC,IAAD,IAA7BA,KAAQC,eAAqB,MAAX,GAAW,EACrCC,EAA4DD,EAA5DC,KAAMC,EAAsDF,EAAtDE,MAAOC,EAA+CH,EAA/CG,IAAKC,EAA0CJ,EAA1CI,YAAaC,EAA6BL,EAA7BK,aAAcC,EAAeN,EAAfM,MAAOC,EAAQP,EAARO,IAC5D,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,EAAG,GACH,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,GAAI,CACFC,MAAO,OACPC,GAAI,IAEN,YAAC,IAAD,CACEF,GAAI,CACFG,cAAe,WAEjB,YAAC,IAAD,KACE,YAAC,IAAD,CACEH,GAAI,CACFI,SAAU,SAEZ,YAAC,IAAD,CACEJ,GAAI,CACFC,MAAO,CAAC,OAAQ,OAChBI,GAAI,CAAC,EAAG,KAEV,YAAC,IAAD,CACEL,GAAI,CACFM,SAAU,aAEZ,mBACEN,GAAI,CACFM,SAAU,WACVC,UAAW,KACXC,KAAM,GACNC,KAAM,EAAE,IAAK,IACbC,aAAc,OACdC,GAAI,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAK,IAC/Bb,MAAO,IACPc,OAAQ,OAGZ,mBACEf,GAAI,CACFM,SAAU,WACVU,OAAQ,GACRC,QAAS,iBAEX,YAAC,IAAOC,GAAR,CACElB,GAAI,CACFM,SAAU,WACVa,WAAY,qBACZd,GAAI,EACJe,MAAO,UACPJ,OAAQ,KAERxB,GAEJ,YAAC,IAAO6B,GAAR,CACErB,GAAI,CACFsB,GAAI,EACJF,MAAO,SAAAR,GAAK,OAAIA,EAAMC,OAAOC,KAAK,IAClCS,WAAY,WAEZ9B,EANJ,MAMgBC,KAIpB,YAAC,IAAD,CACEM,GAAI,CACFwB,GAAI,IAEN,qBAAK7B,IAEP,YAAC,IAAD,CACEK,GAAI,CACFI,SAAU,SAEVR,EAAa6B,KAAI,SAACC,EAAMC,GAAP,OACjB,mBACEC,IAAKD,EACL3B,GAAI,CACF6B,SAAU,UACVC,OAAQ,EACRC,WAAY,EACZC,YAAa,QACbC,YAAa,SAAArB,GAAK,OAAIA,EAAMC,OAAOC,KAAK,IACxCoB,GAAI,EACJhC,GAAI,EACJiC,GAAI,EACJxB,GAAI,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAK,MAC5BY,OAGX,YAAC,IAAD,CACE1B,GAAI,CACFoC,GAAI,CAAC,EAAG,KAEV,iBACEC,KAAMvC,EACNwC,OAAO,SACPC,IAAI,sBACJvC,GAAI,CACFwC,QAAS,iBACTvB,QAAS,eACTwB,eAAgB,OAChBZ,SAAU,EACV3B,GAAI,EACJK,UAAW,KACXI,GAAI,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAK,IAC/B,UAAW,CACTH,GAAI,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAK,OAGnC,yCACA,mBAAKd,GAAI,CAAE0C,cAAe,SAAUC,GAAI,EAAGrC,SAAU,WAAYE,IAAK,QAAUoC,KAAK,eAAeC,oBAAoB,gBAAgB9B,OAAO,MAAMd,MAAM,MAAM6C,QAAQ,aAAY,qBAAG,oBAAMC,EAAE,qRAItM,YAAC,IAAD,CACE/C,GAAI,CACF2C,GAAI,CAAC,EAAG,YACR1C,MAAO,CAAC,OAAQ,SAEhBJ,GACA,mBACEG,GAAI,CACFU,aAAc,EACdH,UAAW,MACXN,MAAO,CAAC,SAEV+C,IAAKnD,EAAMoD,UACXC,IAAM1D,aAcvB,IAAM2D,EAAK","file":"component---src-hashinteractive-gatsby-theme-reactor-templates-project-js-4afef839073bb3197cbb.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Container, Flex, Box, Styled } from 'theme-ui'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nexport default ({ data: { project = {} } }) => {\n  const { name, start, end, description, technologies, image, url } = project\n  return (\n    <Layout>\n      <Container\n        p={3}>\n        <Flex>\n          <Box\n            sx={{\n              width: 'full',\n              py: 5\n            }}>\n            <Flex\n              sx={{\n                flexDirection: 'column'\n              }}>\n              <Box>\n                <Flex\n                  sx={{\n                    flexWrap: 'wrap'\n                  }}>\n                  <Box\n                    sx={{\n                      width: ['full', '1/2'],\n                      mb: [5, 0]\n                    }}>\n                    <Box\n                      sx={{\n                        position: 'relative'\n                      }}>\n                      <div\n                        sx={{\n                          position: 'absolute',\n                          boxShadow: 'xl',\n                          top: -15,\n                          left: [-15, -40],\n                          borderRadius: 'full',\n                          bg: theme => theme.colors.gray[4],\n                          width: 100,\n                          height: 100\n                        }}\n                      />\n                      <div\n                        sx={{\n                          position: 'relative',\n                          zIndex: 99,\n                          display: 'inline-block',\n                        }}>\n                        <Styled.h1\n                          sx={{\n                            position: 'relative',\n                            textShadow: '-1px 1px lightgray',\n                            mb: 0,\n                            color: 'primary',\n                            zIndex: 99\n                          }}>\n                          { name }\n                        </Styled.h1>\n                        <Styled.h6\n                          sx={{\n                            pl: 5,\n                            color: theme => theme.colors.gray[4],\n                            fontWeight: 'medium'\n                          }}>\n                          { start } - { end }\n                        </Styled.h6>\n                      </div>\n                    </Box>\n                    <Box\n                      sx={{\n                        my: 4\n                      }}>\n                      <p>{ description }</p>\n                    </Box>\n                    <Flex\n                      sx={{\n                        flexWrap: 'wrap'\n                      }}>\n                      { technologies.map((tech, i) => (\n                        <div\n                          key={i}\n                          sx={{\n                            fontSize: '0.75rem',\n                            border: 0,\n                            borderLeft: 3,\n                            borderStyle: 'solid',\n                            borderColor: theme => theme.colors.gray[4],\n                            px: 3,\n                            py: 1,\n                            mr: 3,\n                            bg: theme => theme.colors.gray[2]\n                          }}>{ tech }</div>\n                      ))}\n                    </Flex>\n                    <Box\n                      sx={{\n                        mt: [5, 6]\n                      }}>\n                      <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        sx={{\n                          variant: 'buttons.simple',\n                          display: 'inline-block',\n                          textDecoration: 'none',\n                          fontSize: 2,\n                          py: 3,\n                          boxShadow: 'lg',\n                          bg: theme => theme.colors.gray[5],\n                          '&:hover': {\n                            bg: theme => theme.colors.gray[6]\n                          }\n                        }}>\n                        <span>Visit Project</span>\n                        <svg sx={{ verticalAlign: 'middle', ml: 2, position: 'relative', top: '-1px' }} fill=\"currentColor\" preserveAspectRatio=\"xMidYMid meet\" height=\"1em\" width=\"1em\" viewBox=\"0 0 40 40\"><g><path d=\"m28.4 11.6c4.6 0 8.2 3.8 8.2 8.4s-3.6 8.4-8.2 8.4h-6.8v-3.2h6.8c2.8 0 5.1-2.4 5.1-5.2s-2.3-5.2-5.1-5.2h-6.8v-3.2h6.8z m-15 10v-3.2h13.2v3.2h-13.2z m-6.9-1.6c0 2.8 2.3 5.2 5.1 5.2h6.8v3.2h-6.8c-4.6 0-8.2-3.8-8.2-8.4s3.6-8.4 8.2-8.4h6.8v3.2h-6.8c-2.8 0-5.1 2.4-5.1 5.2z\"></path></g></svg>\n                      </a>\n                    </Box>\n                  </Box>\n                  <Box\n                    sx={{\n                      ml: [0, '16.6666%'],\n                      width: ['full', '1/3']\n                    }}>\n                    { image && (\n                      <img\n                        sx={{\n                          borderRadius: 5,\n                          boxShadow: '2xl',\n                          width: ['full']\n                        }}\n                        src={image.publicURL}\n                        alt={ name }\n                        />\n                    )}\n                  </Box>\n                </Flex>\n              </Box>\n            </Flex>\n          </Box>\n        </Flex>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($projectID: String!) {\n    project(id: { eq: $projectID }) {\n      name\n      description\n      technologies\n      url\n      id\n      image {\n        publicURL\n      }\n      start(formatString: \"MMM Do YYYY\")\n      end(formatString: \"MMM Do YYYY\")\n    }\n  }\n`"],"sourceRoot":""}